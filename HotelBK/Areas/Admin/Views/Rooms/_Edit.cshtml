@model HotelBK.Models.Room
@{
    var imageCount = Model.RoomImages?.Count() ?? 0;
    <div>Số lượng ảnh: @imageCount</div>
}
<form action="/Admin/Rooms/CreateOrUpdate" method="post" enctype="multipart/form-data">
    <input type="hidden" name="RoomID" value="@Model.RoomID" />

    <div class="form-group mb-3">
        <label>Tên Phòng</label>
        <input type="text" name="RoomName" class="form-control" value="@Model.RoomName" required />
    </div>

    <div class="form-group mb-3">
        <label>Loại Phòng</label>
        <select name="RoomTypeID" class="form-select" required>
            <option value="">-- Chọn loại phòng --</option>
            @foreach (var item in ViewBag.RoomTypes)
            {
                if (item.Value == Model.RoomTypeID.ToString())
                {
                    <option value="@item.Value" selected>@item.Text</option>
                }
                else
                {
                    <option value="@item.Value">@item.Text</option>
                }
            }
        </select>
    </div>

    <div class="form-group mb-3">
        <label>Giá</label>
        <input type="number" name="Price" class="form-control" min="0" step="0.01" value="@Model.Price" required />
    </div>

    <div class="form-group mb-3">
        <label>Số sao</label>
        <input type="number" name="StarRating" min="1" max="5" class="form-control" value="@Model.StarRating" />
    </div>

    <div class="form-group mb-3">
        <label>Số giường</label>
        <input type="number" name="Beds" class="form-control" min="1" value="@Model.Beds" required />
    </div>

    <div class="form-group mb-3">
        <label>Số phòng tắm</label>
        <input type="number" name="Bathrooms" class="form-control" min="1" value="@Model.Bathrooms" required />
    </div>

    <div class="form-group mb-3">
        <label>Mô tả</label>
        <textarea name="Description" class="form-control" rows="3">@Model.Description</textarea>
    </div>

    <div class="form-group mb-3">
        <label>Trạng thái</label>
        <select name="Status" class="form-select">
            <option value="Còn trống" @(Model.Status == "Còn trống" ? "selected" : "")>Còn trống</option>
            <option value="Đang ở" @(Model.Status == "Đang ở" ? "selected" : "")>Đang ở</option>
            <option value="Bảo trì" @(Model.Status == "Bảo trì" ? "selected" : "")>Bảo trì</option>
        </select>
    </div>

    <div class="form-group mb-3">
        <label>Ảnh chính</label>
        <input type="file" name="imageFile" class="form-control" />
        @if (!string.IsNullOrEmpty(Model.Image))
        {
            <div class="mt-2">
                <img src="@Model.Image" alt="@Model.RoomName" width="100" />
                <p class="text-muted">Ảnh chính hiện tại. Tải lên ảnh mới để thay đổi.</p>
            </div>
        }
    </div>

    <div class="form-group mb-3">
        <label>Ảnh khác</label>
        <input type="file" name="additionalImages" class="form-control" multiple />
        <small class="form-text text-muted">Có thể chọn nhiều ảnh cùng lúc để thêm</small>

        <!-- Hiển thị các ảnh đã tải lên -->
        <!-- Hiển thị các ảnh đã tải lên -->
        <div class="mt-3">
            <h6>Tất cả ảnh của phòng</h6>
            <div class="d-flex flex-wrap gap-2 mt-2">
                @if (Model.RoomImages != null && Model.RoomImages.Any())
                {
                    foreach (var image in Model.RoomImages)
                    {
                        <div class="position-relative border rounded p-1" id="image-@image.ImageID" style="width: 120px;">
                            <div class="image-container position-relative" style="padding-bottom: 2px;">
                                <img src="@image.ImagePath" alt="Room image" width="100%" height="90px" style="object-fit: cover;" />

                                <!-- Sửa nút xóa -->
                                <button type="button" class="btn-close delete-img-btn position-absolute top-0 end-0 bg-danger text-white"
                                        style="font-size: 0.7rem; padding: 0.1rem; margin-top: 5px;"
                                        onclick="testDeleteDirectly('@image.ImageID')">
                                </button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">Chưa có ảnh nào cho phòng này.</p>
                }
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-success">Lưu thay đổi</button>
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Log tất cả các phần tử có data-id để debug
        console.log("Đang kiểm tra các phần tử có data-id:");
        document.querySelectorAll('[data-id]').forEach(el => {
            console.log("Element with data-id:", el.getAttribute('data-id'));
        });

        // Xử lý nút xóa ảnh (dấu X)
        document.querySelectorAll('.delete-img-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const imageId = this.getAttribute('data-id');
                console.log("Nhấn nút xóa ảnh ID:", imageId);

                if (confirm('Bạn có chắc muốn xóa ảnh này?')) {
                    deleteImage(imageId);
                }
            });
        });

        // Gọi API để xóa ảnh
        function deleteImage(imageId) {
            console.log("Đang gọi API xóa ảnh ID:", imageId);

            fetch(`/Admin/Rooms/DeleteImage/${imageId}`, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                console.log("Response status:", response.status);
                return response.text();
            })
            .then(text => {
                console.log("API response text:", text);
                try {
                    const data = JSON.parse(text);
                    console.log("Parsed JSON:", data);

                    if (data.success) {
                        // Xóa phần tử DOM
                        const element = document.getElementById(`image-${imageId}`);
                        if (element) {
                            element.remove();
                            console.log("Đã xóa phần tử DOM thành công");
                        } else {
                            console.error("Không tìm thấy phần tử DOM với ID image-" + imageId);
                        }
                    } else {
                        alert('Không thể xóa ảnh: ' + (data.message || 'Lỗi không xác định'));
                    }
                } catch (error) {
                    console.error("Lỗi parse JSON:", error);
                    alert('Lỗi khi xử lý phản hồi từ server');
                }
            })
            .catch(error => {
                console.error('Lỗi fetch:', error);
                alert('Đã xảy ra lỗi khi gọi API: ' + error.message);
            });
        }
    });
    function testDeleteDirectly(imageId) {
        console.log("Test delete image ID:", imageId);

        const url = '/Admin/Rooms/DeleteImage/' + imageId;
        console.log("Calling URL:", url);

        fetch(url, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            console.log("Status:", response.status);
            return response.text();
        })
        .then(text => {
            console.log("Response:", text);

            try {
                const data = JSON.parse(text);
                console.log("Parsed response:", data);

                if (data.success) {
                    // Xóa phần tử khỏi DOM
                    const imageElement = document.getElementById('image-' + imageId);
                    if (imageElement) {
                        console.log("Removing element from DOM:", imageElement);
                        imageElement.remove();
                        alert("Đã xóa ảnh thành công!");
                    } else {
                        console.error("Could not find element with ID: image-" + imageId);
                        alert("Xóa thành công nhưng không tìm thấy phần tử DOM để cập nhật giao diện");
                    }
                } else {
                    alert("Lỗi: " + data.message);
                }
            } catch (e) {
                console.error("Error parsing JSON:", e);
                alert("Lỗi khi xử lý phản hồi: " + e.message);
            }
        })
        .catch(error => {
            console.error("Error:", error);
            alert("Lỗi: " + error.message);
        });
    }
</script>